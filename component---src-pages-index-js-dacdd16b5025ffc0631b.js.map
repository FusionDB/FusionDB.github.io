{"version":3,"sources":["webpack:///./src/components/home/Image.js","webpack:///./src/pages/index.js","webpack:///./src/components/news/List.js","webpack:///./src/components/news/Latest.js","webpack:///./src/components/news/Utils.js"],"names":["Image","query","render","data","fluid","placeholderImage","childImageSharp","IndexPage","className","href","target","rel","to","Item","item","key","get","alt","parseDate","List","items","map","defaultProps","Latest","allMarkdownRemark","edges","date","parts","split","d","Date","getDay","getMonth","getDate","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-dacdd16b5025ffc0631b.js","sourcesContent":["import Img from 'gatsby-image'\nimport React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"screen-flab.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { IconGithub } from '../components/common/icons'\nimport { Image } from '../components/home'\nimport { Latest } from '../components/news'\nimport { Layout } from '../components/common/layout'\nimport { Seo } from '../components/common/seo'\n\nconst IndexPage = () => (\n  <Layout className='home-page'>\n    <Seo />\n\n    <div className='band'>\n      <div className='container'>\n        <div className='band-content'>\n          <div className='image'>\n            <Image />\n          </div>\n          <div className='text'>\n            <p className='description'>\n              <strong>企业级 Core Data & Core AI 统一分析平台</strong> 开箱即用{' '}\n              <strong>&</strong> 开发者友好， 支持{' '}\n              <a\n                href='https://www.fusionlab.cn/'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Cloud、 Kubernetes\n              </a>{' '}\n              and{' '}\n              <a\n                href='https://www.fusionlab.cn/'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Data Center\n              </a>\n            </p>\n            <ul className='links'>\n              <li>\n                <strong>基础理念：</strong> 基于分布式数据存储和计算引擎设计\n              </li>\n              <li>\n                <strong>开发工具：</strong> 利用 ambari-plus 管理平台组件\n              </li>\n              <li>\n                <strong>基础构成：</strong> 高性能的分布式 Mixed Engine\n                计算引擎，支撑万亿数据秒级响应和存储能力\n              </li>\n              <li>\n                <strong>核心功能：</strong> Core Data & Core AI：Core\n                Data提供高度易用的统一数据分析体验，真正的统一 Batch & Streaming\n                计算模型。Core AI\n                提供分布式系统上的AI能力，帮助企业智能化转型，提供低\n                TCO、全自动化、智能化 AI 应用构建。\n              </li>\n              <li>\n                <strong>基础运维：</strong> 开箱即用，可视化运维管理系统\n                ambari-plus，提供核心的服务管理与配置中心功能，保障集群的稳定可靠，简单高效的管理大规模分布式系统。\n              </li>\n              <li>\n                <strong>100% 开源</strong>，Apache Licensed\n              </li>\n            </ul>\n            <p>\n              <Link className='button' to='/getting-started/'>\n                Getting Started\n              </Link>{' '}\n              <a\n                className='button light icon'\n                href='https://github.com/fuslab/anyscale'\n                target='_blank'\n                rel='noreferrer noopener'\n              >\n                <IconGithub />\n                View on Github\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='container'>\n      <div className='layout-basic'>\n        <div className='colset'>\n          <div className='col col-1'>\n            <a href='/docs/concepts/'>\n              <h2>Core Data</h2>\n              <p>\n                提供高度易用的统一数据分析体验，真正的统一 Batch & Streaming\n                计算模型 <br />\n                Mixed Engine。\n                <br />\n                简单易用，实现跨数据源融合计算能力。\n              </p>\n              <p>\n                <span>Read more</span>\n              </p>\n            </a>\n          </div>\n          <div className='col col-2'>\n            <a href='/docs/concepts/tooling/'>\n              <h2>Core AI</h2>\n              <p>\n                分布式系统上的 AI 能力，帮助企业智能化转型 <br />\n                提供低 TCO、全自动化、智能化 AI 应用构建。\n                <br />\n                CoreData 提供海量数据存储和高性能算力支撑。\n              </p>\n              <p>\n                <span>Read more</span>\n              </p>\n            </a>\n          </div>\n          <div className='col col-3'>\n            <a href='/getting-started/'>\n              <h2>Open Source</h2>\n              <p>\n                100% 开源，Apache Licensed\n                <br />\n                企业级 Core Data & Core AI\n                统一分析平台，完全分布式开源系统构建，高效的管理大规模分布式系统。\n              </p>\n              <p>\n                <span>Read more</span>\n              </p>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div className='home-news'>\n      <div className='container'>\n        <h1>博客</h1>\n        <div className='news-list'>\n          <Latest />\n        </div>\n        <p className='readmore'>\n          <a href='/news/' className='button'>\n            Read more\n          </a>\n        </p>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","import Img from 'gatsby-image'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport get from 'lodash.get'\nimport { Link } from 'gatsby'\n\nimport { parseDate } from './index'\n\nconst Item = ({ item }) => {\n  return (\n    <article key={`article-${get(item, 'node.id')}`}>\n      <Img\n        fluid={get(item, 'node.frontmatter.image.childImageSharp.fluid')}\n        alt=''\n      />\n      <div className='item-content'>\n        <h1 key={`h1-${get(item, 'node.id')}`}>\n          {get(item, 'node.frontmatter.title')}\n        </h1>\n        <p className='date'>{parseDate(get(item, 'node.frontmatter.date'))}</p>\n        <p className='desc' key={`desc-${get(item, 'node.id')}`}>\n          {get(item, 'node.frontmatter.description')}\n        </p>\n        <p className='link' key={`link-${get(item, 'node.id')}`}>\n          Read more\n        </p>\n      </div>\n    </article>\n  )\n}\n\nconst List = ({ items }) => {\n  return items.map(item =>\n    get(item, 'node.frontmatter.external') ? (\n      <a\n        className='item'\n        key={`item-${get(item, 'node.id')}`}\n        target='_blank'\n        rel='noopener noreferrer'\n        href={get(item, 'node.frontmatter.path')}\n      >\n        <div>\n          <Item item={item} />\n        </div>\n      </a>\n    ) : (\n      <Link\n        className='item'\n        key={`item-${get(item, 'node.id')}`}\n        to={`/news${get(item, 'node.frontmatter.path')}`}\n      >\n        <div>\n          <Item item={item} />\n        </div>\n      </Link>\n    )\n  )\n}\n\nList.defaultProps = {\n  items: [],\n}\n\nList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default List\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { List } from './index'\n\nconst Latest = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allMarkdownRemark(\n            filter: { fields: { hash: { eq: \"news\" } } }\n            sort: { fields: fileAbsolutePath, order: DESC }\n            limit: 4\n          ) {\n            edges {\n              node {\n                id\n                frontmatter {\n                  title\n                  description\n                  path\n                  category\n                  date\n                  external\n                  image {\n                    childImageSharp {\n                      fluid {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return <List items={data.allMarkdownRemark.edges} />\n      }}\n    />\n  )\n}\n\nexport default Latest\n","const parseDate = date => {\n  const parts = date.split('-')\n  const d = new Date(parts[2], parts[0] - 1, parts[1])\n  const weekday = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ]\n  const month = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n  return `${weekday[d.getDay()]}, ${\n    month[d.getMonth()]\n  } ${d.getDate()}, ${d.getFullYear()}`\n}\n\nexport default parseDate\n"],"sourceRoot":""}